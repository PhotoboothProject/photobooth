---
- name: Photbooth
  hosts:
    - 127.0.0.1
  become: true
  vars:
    php_version: '8.2'
    webserver: "{{ lookup('env', 'PHOTOBOOTH_WEBSERVER') | default('apache', true) }}"
    photobooth:
      version: "{{ lookup('env', 'PHOTOBOOTH_VERSION') | default('dev', true) }}"
    services:
      enable:
      disable:
    packages:
      apt:
        install:
          # common
          - apt-transport-https
          - lsb-release
          - ca-certificates
          - software-properties-common
          - git
          - jq
        remove:
        hold:
        webserver:
          nginx:
            - nginx
            - php{{ php_version }}
            - php{{ php_version }}-fpm

  tasks:
    - name: Setup debian repos
      block:
        - name: Download gpg key
          ansible.builtin.get_url:
            url: https://packages.sury.org/php/apt.gpg
            dest: /etc/apt/trusted.gpg.d/php.gpg

        - name: Add php repo
          ansible.builtin.apt_repository:
            repo: >-
              deb [signed-by=/etc/apt/trusted.gpg.d/php.gpg] https://packages.sury.org/php/ {{ ansible_distribution_release }}
              main
            state: present
      when: ansible_distribution == 'Debian'

    - name: Setup Ubuntu/jammy repos
      block:
        - name: Add update repo
          ansible.builtin.apt_repository:
            repo: >-
              deb http://archive.ubuntu.com/ubuntu/ jammy-updates main restricted
            state: present
        - name:
          ansible.builtin.apt_repository:
            repo: ppa:ondrej/php
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'jammy'

    - name: add firmware packages to hold
      dpkg_selections:
        name: '{{ item }}'
        selection: hold
      with_items: '{{ packages.apt.hold }}'

    - name: update apt package cache
      apt:
        update_cache: true

    - name: remove unecessary apt packages
      apt:
        name: '{{ packages.apt.remove }}'
        state: absent
        purge: true

    - name: upgrade apt distro
      apt:
        upgrade: dist

    - name: install packages
      apt:
        name: '{{ packages.apt.install }}'
        state: present

    - name: install webserver
      apt:
        name: '{{ packages.apt.webserver[webserver] }}'
        state: present

    - name: clean apt cache
      apt:
        autoclean: true

    - name: remove dependencies that are no longer required
      apt:
        autoremove: true

    - name: enable services
      systemd:
        name: '{{ item }}'
        state: started
        enabled: true
      with_items: '{{ services.enable }}'

    - name: disable unecessary services
      systemd:
        name: '{{ item }}'
        state: stopped
        enabled: false
      with_items: '{{ services.disable }}'

  handlers:
    - name: reload systemd services
      systemd:
        daemon_reload: true
